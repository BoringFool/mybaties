<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- AOP需要用到的配置文件 -->
	<aop:aspectj-autoproxy />

	<!-- 添加组成扫描,排除被SpringMVC包含的过滤注解 -->
	<context:component-scan base-package="com.zm">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 数据库 -->
	<context:property-placeholder
		location="classpath*:db.properties" />

	<!--DataSource-数据库关联(druid) -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${jdbc.userName}"></property>
		<property name="password" value="${jdbc.passowrd}"></property>
		<property name="driverClassName"
			value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.jdbcUrl}"></property>
	</bean>

	<!-- MyBaties整合 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!--指定XML文件 -->
		<property name="configLocation"
			value="classpath:sqlMapConfig.xml" />
		<property name="typeAliasesPackage" value="com.zm.entity"></property>
	</bean>

	<!-- 创建Mapper层的对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zm.mapper.interfaces" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
	</bean>

	<!-- MyBatis spring sqlSessionTemplate,使用时直接让spring注入即可 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 启动事务注解 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- <bean id="userservice" class="com.zm.service.impl.UserService" > </bean> -->
	<!-- more bean definitions go here -->


	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html; charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

</beans>