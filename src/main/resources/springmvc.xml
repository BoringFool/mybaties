<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!-- 添加组成扫描,包含过滤注解 -->
	<context:component-scan base-package="com.zm"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 静态资源文件放在web-info下时，需要配置 -->
	<mvc:default-servlet-handler />
	<!-- <mvc:resources mapping="/images/**" location="/WEB-INF/images/" /> -->

	<!-- if you use annotation you must configure following setting 注解 -->
	<mvc:annotation-driven />


	<!-- configure 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/jsp/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 文件上传 -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>



	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<mvc:exclude-mapping path="/user/in" />
			<mvc:exclude-mapping path="/user/register" />
			<mvc:exclude-mapping path="/user/checkState" />
			<bean id="userInterceptor"
				class="com.zm.interceptor.UserConInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

</beans>